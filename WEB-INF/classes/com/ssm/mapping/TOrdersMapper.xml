<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapping.TOrdersMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.TOrders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="platform_id" jdbcType="VARCHAR" property="platformId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="receivables_date" jdbcType="VARCHAR" property="receivablesDate" />
    <result column="t_orderscol" jdbcType="VARCHAR" property="tOrderscol" />
    <result column="merchant_no" jdbcType="VARCHAR" property="merchantNo" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="pay_way" jdbcType="VARCHAR" property="payWay" />
    <result column="return_amount" jdbcType="VARCHAR" property="returnAmount" />
    <result column="bank_no" jdbcType="VARCHAR" property="bankNo" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="recive_account_name" jdbcType="VARCHAR" property="reciveAccountName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, platform_id, user_id, status, amount, create_date, receivables_date, t_orderscol, 
    merchant_no, order_no, account_id, pay_way, return_amount, bank_no, bank_account, 
    recive_account_name
  </sql>
  <select id="selectByExample" parameterType="com.ssm.pojo.TOrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.pojo.TOrdersExample">
    delete from t_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.TOrders">
    insert into t_orders (id, platform_id, user_id, 
      status, amount, create_date, 
      receivables_date, t_orderscol, merchant_no, 
      order_no, account_id, pay_way, 
      return_amount, bank_no, bank_account, 
      recive_account_name)
    values (#{id,jdbcType=INTEGER}, #{platformId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, #{createDate,jdbcType=VARCHAR}, 
      #{receivablesDate,jdbcType=VARCHAR}, #{tOrderscol,jdbcType=VARCHAR}, #{merchantNo,jdbcType=VARCHAR}, 
      #{orderNo,jdbcType=VARCHAR}, #{accountId,jdbcType=VARCHAR}, #{payWay,jdbcType=VARCHAR}, 
      #{returnAmount,jdbcType=VARCHAR}, #{bankNo,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, 
      #{reciveAccountName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.TOrders">
    insert into t_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="platformId != null">
        platform_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="receivablesDate != null">
        receivables_date,
      </if>
      <if test="tOrderscol != null">
        t_orderscol,
      </if>
      <if test="merchantNo != null">
        merchant_no,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="payWay != null">
        pay_way,
      </if>
      <if test="returnAmount != null">
        return_amount,
      </if>
      <if test="bankNo != null">
        bank_no,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="reciveAccountName != null">
        recive_account_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="platformId != null">
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="receivablesDate != null">
        #{receivablesDate,jdbcType=VARCHAR},
      </if>
      <if test="tOrderscol != null">
        #{tOrderscol,jdbcType=VARCHAR},
      </if>
      <if test="merchantNo != null">
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="payWay != null">
        #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="returnAmount != null">
        #{returnAmount,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="reciveAccountName != null">
        #{reciveAccountName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.pojo.TOrdersExample" resultType="java.lang.Long">
    select count(*) from t_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.platformId != null">
        platform_id = #{record.platformId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.receivablesDate != null">
        receivables_date = #{record.receivablesDate,jdbcType=VARCHAR},
      </if>
      <if test="record.tOrderscol != null">
        t_orderscol = #{record.tOrderscol,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantNo != null">
        merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.payWay != null">
        pay_way = #{record.payWay,jdbcType=VARCHAR},
      </if>
      <if test="record.returnAmount != null">
        return_amount = #{record.returnAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNo != null">
        bank_no = #{record.bankNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveAccountName != null">
        recive_account_name = #{record.reciveAccountName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_orders
    set id = #{record.id,jdbcType=INTEGER},
      platform_id = #{record.platformId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=VARCHAR},
      receivables_date = #{record.receivablesDate,jdbcType=VARCHAR},
      t_orderscol = #{record.tOrderscol,jdbcType=VARCHAR},
      merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      account_id = #{record.accountId,jdbcType=VARCHAR},
      pay_way = #{record.payWay,jdbcType=VARCHAR},
      return_amount = #{record.returnAmount,jdbcType=VARCHAR},
      bank_no = #{record.bankNo,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      recive_account_name = #{record.reciveAccountName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.TOrders">
    update t_orders
    <set>
      <if test="platformId != null">
        platform_id = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="receivablesDate != null">
        receivables_date = #{receivablesDate,jdbcType=VARCHAR},
      </if>
      <if test="tOrderscol != null">
        t_orderscol = #{tOrderscol,jdbcType=VARCHAR},
      </if>
      <if test="merchantNo != null">
        merchant_no = #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="payWay != null">
        pay_way = #{payWay,jdbcType=VARCHAR},
      </if>
      <if test="returnAmount != null">
        return_amount = #{returnAmount,jdbcType=VARCHAR},
      </if>
      <if test="bankNo != null">
        bank_no = #{bankNo,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="reciveAccountName != null">
        recive_account_name = #{reciveAccountName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.TOrders">
    update t_orders
    set platform_id = #{platformId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=VARCHAR},
      receivables_date = #{receivablesDate,jdbcType=VARCHAR},
      t_orderscol = #{tOrderscol,jdbcType=VARCHAR},
      merchant_no = #{merchantNo,jdbcType=VARCHAR},
      order_no = #{orderNo,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=VARCHAR},
      pay_way = #{payWay,jdbcType=VARCHAR},
      return_amount = #{returnAmount,jdbcType=VARCHAR},
      bank_no = #{bankNo,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      recive_account_name = #{reciveAccountName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>